
@{
    ViewData["Title"] = "Index";
    Layout = "MainLayout";
}
@model Quan_Ly_Do_An.Models.ClassWithDetailsModel
<style>
    .sticky-save-btn {
        position: fixed;
        bottom: 40px;
        right: 30px;
        z-index: 1000;
        padding:10px;
    }
</style>
@if (TempData["Message"] != null)
{
    <div aria-live="polite" aria-atomic="true" class="position-relative">
        <!-- Toast container positioned at the top-right -->
        <div class="toast-container position-fixed top-10 end-0 p-2" style="z-index: 1050;">
            <div class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="7000">
                <div class="toast-header">
                    <i class="bi bi-bell-fill rounded me-2" style="color: yellow; font-size: 1.5rem;"></i>
                    <strong class="me-auto">Thông báo</strong>
                    <small class="text-muted">Vừa xong</small>
                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Đóng"></button>
                </div>
                <div class="toast-body" id="toastMessage">
                    @TempData["Message"] 
                </div>
            </div>
        </div>
    </div>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var toastEl = document.querySelector('.toast');
            var toast = new bootstrap.Toast(toastEl);
            toast.show();
        });
    </script>
}

@{
    int serialNumber = 1; // Khởi tạo biến đếm để làm số thứ tự
}

<div class="container bg-light rounded mt-5 p-4 shadow-sm">
    <div class="col-12 col-md-8">
        <h2 class="display-6 text-primary">
            @Model.Members.FirstOrDefault()?.ClassName - Lớp: @Model.Members.FirstOrDefault()?.SubjectCode
        </h2>
        <h4 class="text-secondary mb-2">
            Giảng viên: @Model.Instructor.InstructorFullName
        </h4>
        <h5 class="text-muted">
            Tổng số sinh viên: <span class="fw-bold">@Model.Members.Count</span>
        </h5>
    </div>
</div>

<div class="container mt-3">
    <div class="row">
        <div class="col-md-3">
            
            <label for="actionSelect">Chọn hành động:</label>
            <i class="bi bi-table"></i>
            <select class="form-select" id="actionSelect">
                <option value="default">Default</option>
                <option value="auto">Tự động điền tên đồ án</option>
                <option value="asc">Sắp xếp tăng dần theo nhóm</option>
                <option value="desc">Sắp xếp giảm dần theo nhóm</option>
                <option value="no-group">Lọc các sinh viên chưa có nhóm</option>
                <option value="has-group">Lọc các sinh viên đã có nhóm</option>
            </select>
        </div>
    </div>
</div>
@* <button id="autoFillButton" type="button" class="btn btn-primary d-flex" data-bs-toggle="tooltip" title="Tự động điền tên đồ án" value="auto" style="float:right">
    <i class="bi bi-table"></i>
</button> *@

<script>
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
    })
</script>
<div class="container bg-light rounded mt-5 p-4 shadow-sm">
  
    <form asp-action="@((ViewBag.HasData != null && ViewBag.HasData == true) ? "UpdateProjects" : "SaveAllProjects")"
          asp-controller="Class" method="post">
        @if (ViewBag.HasData != null && ViewBag.HasData == true)
        {
            <button type="submit" class="btn btn-success sticky-save-btn">Lưu chỉnh sửa</button>
        }
        else
        {
            <button type="submit" class="btn btn-success sticky-save-btn">Lưu tất cả</button>
        }
        <input name="ClassId" value="@Model.Instructor.ClassId" type="hidden" /> <!-- Lưu ClassId cho Project -->

        <div class="table-responsive">
            
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>STT</th>
                        <th>Họ tên</th>
                        <th>Mã sinh viên</th>
                        <th>Gmail</th>
                        <th>Nhóm</th>
                        <th>Nhóm trưởng</th>
                        <th>Tên đồ án</th>
                        <th>Điểm</th>
                        <th>Ghi chú</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Members.Count; i++)
                    {
                        var member = Model.Members[i];
                        

                          <input name="Projects[@i].UserId" value="@member.UserId" type="hidden" /> 
                        <tr>
                            <td>@(i + 1)</td> <!-- Số thứ tự -->
                            <td>@member.StudentFullName</td>
                            <td>@member.StudentCode</td>
                            <td>@member.StudentEmail</td>

                            <!-- Nhập nhóm -->
                            <td>
                                <input type="number" name="Projects[@i].GroupNumber" min="0" max="99"
                                       value="@(member.GroupNumber != null ? member.GroupNumber : "")" required />
                            </td>

                            <!-- Nhóm trưởng -->
                            <td>
                                <input class="form-check-input" type="checkbox" name="Projects[@i].IsLeader" value="true"
                                @(member?.IsLeader == "Yes" ? "checked" : "") />
                                <label class="form-check-label" for="customCheck@i">Chọn</label>
                            </td>

                            <!-- Tên đồ án -->
                            <td>
                                <input class="project-name" type="text" name="Projects[@i].ProjectName"
                                       value="@(member.ProjectName ?? "")" maxlength="40" required />
                            </td>

                            <!-- Điểm -->
                            <td>
                                <input type="number" name="Projects[@i].Score" min="0" max="100"
                                       />
                            </td>

                            <!-- Ghi chú -->
                            <td>
                                <input type="text" name="Projects[@i].Note"
                                       maxlength="100" />
                            </td>
                        </tr>
                    }
                </tbody>

            </table>
        </div>
    </form>
</div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    // Đợi đến khi tài liệu sẵn sàng
    $(document).ready(function () {
        // Lắng nghe sự kiện click của nút
        $('#autoFillButton').on('click', function () {
            autoFillProjectName(); // Gọi hàm khi nút được nhấn
        });
    });

    $(document).ready(function () {
        // Lắng nghe sự kiện thay đổi giá trị trong select
        $('#actionSelect').change(function () {
            var selectedValue = $(this).val(); // Lấy giá trị của tùy chọn được chọn

            switch (selectedValue) {
                case 'default':
                    resetChanges(); // Thực hiện hành động Auto
                    break;
                case 'auto':
                    autoFillProjectName(); // Thực hiện hành động Auto
                    break;
                case 'asc':
                    sortByGroup('asc'); // Sắp xếp tăng dần theo nhóm
                    break;
                case 'desc':
                    sortByGroup('desc'); // Sắp xếp giảm dần theo nhóm
                    break;
                case 'no-group':
                    filterByGroup(false); // Lọc sinh viên chưa có nhóm
                    break;
                case 'has-group':
                    filterByGroup(true); // Lọc sinh viên đã có nhóm
                    break;
                default:
                    break;
            }
        });
        function resetChanges() {
            // Hiển thị tất cả các dòng
            $('table tbody tr').show();
        }

        // Hàm Auto (Điền tên đồ án vào tất cả ô trống)
        function autoFillProjectName() {
            
            // Duyệt qua tất cả các dòng trong bảng
            $('table tbody tr').each(function () {
                // Lấy số nhóm từ input GroupNumber của dòng hiện tại
                var groupNumber = $(this).find('input[name^="Projects"][name$=".GroupNumber"]').val();

                // Kiểm tra nếu groupNumber có giá trị hợp lệ
                if (groupNumber) {
                    // Lấy giá trị tên đồ án từ dòng đầu tiên (hoặc nhóm trưởng)
                    var projectNameField = $(this).find('.project-name');
                    var projectName = '';
                    // Nếu là dòng đầu tiên trong nhóm (hoặc nhóm trưởng)
                    if (!projectNameField.val()) {
                        // Lấy tên đồ án từ dòng đầu tiên có groupNumber
                        var firstGroupMember = $('table tbody tr').filter(function () {
                            return $(this).find('input[name^="Projects"][name$=".GroupNumber"]').val() === groupNumber;
                        }).first().find('.project-name').val(); // Tên đồ án của nhóm trưởng hoặc thành viên đầu tiên

                        @* projectName = firstGroupMember ? firstGroupMember : 'Đồ án nhóm ' + groupNumber; *@ // Nếu không có tên đồ án, dùng mặc định
                    } else {
                        projectName = projectNameField.val(); // Nếu đã có tên đồ án thì lấy giá trị đó
                    }

                    // Duyệt qua các dòng khác và tìm các ô trống cùng groupNumber
                    $('table tbody tr').each(function () {
                        // Lấy số nhóm từ mỗi dòng
                        var currentGroupNumber = $(this).find('input[name^="Projects"][name$=".GroupNumber"]').val();
                        // Nếu dòng này có cùng groupNumber và ô tên đồ án trống
                        if (currentGroupNumber == groupNumber) {
                            var projectNameField = $(this).find('.project-name');
                            // Kiểm tra xem ô tên đồ án có trống hay không
                            if (!projectNameField.val()) {
                                projectNameField.val(projectName); // Điền tên đồ án vào ô trống
                            }
                        }
                    });
                }
            });
        }

        // Hàm Sắp xếp theo nhóm (tăng dần hoặc giảm dần)
        function sortByGroup(order) {
            // Lấy tất cả các dòng trong bảng
            var rows = $('table tbody tr').get();

            // Sắp xếp các dòng theo nhóm (tăng dần hoặc giảm dần)
            rows.sort(function (a, b) {
                var groupA = $(a).find('input[name^="Projects"]').eq(0).val();
                var groupB = $(b).find('input[name^="Projects"]').eq(0).val();

                if (order === 'asc') {
                    return groupA - groupB; // Sắp xếp tăng dần
                } else {
                    return groupB - groupA; // Sắp xếp giảm dần
                }
            });

            // Sau khi sắp xếp, thêm lại các dòng vào bảng theo thứ tự mới
            $.each(rows, function (index, row) {
                $('table tbody').append(row);
            });
        }


        // Hàm lọc sinh viên theo nhóm
        function filterByGroup(hasGroup) {
            // Duyệt qua tất cả các dòng trong bảng
            $('table tbody tr').each(function () {
                var groupNumber = $(this).find('input[name^="Projects"]').eq(0).val();

                // Kiểm tra nhóm và ẩn/hiển thị các dòng theo điều kiện lọc
                if ((hasGroup && groupNumber > 0) || (!hasGroup && groupNumber == 0)) {
                    $(this).show(); // Hiển thị dòng nếu phù hợp với điều kiện
                } else {
                    $(this).hide(); // Ẩn dòng nếu không phù hợp
                }
            });
        }

    });



</script>

   

